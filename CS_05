from scapy.all import sniff, conf
from scapy.layers.inet import IP

# Informing the user and getting the consent
print("This tool will capture and analyze network packets.")
print("Please ensure you have the necessary permissions to use this tool.")
consent = input("Do you agree to network packet sniffing? (Yes/No): ").strip().lower()

# Check if the user granted permission
if consent != 'yes':
    print("Permission not granted. Exiting the program.")
    exit()

# Specify the log file for network packets
log_file = "packets.txt"

# Create the log file if it doesn't exist
if not os.path.exists(log_file):
    with open(log_file, "w") as f:
        f.write("")  # Create an empty file

def packet_handler(packet):
    """
    This function is called for each captured packet.
    It extracts the source and destination IP addresses from the packet and logs them.
    """
    if IP in packet:
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst

        # Log the packet information to the file
        with open(log_file, "a") as f:
            f.write(f"Source IP: {src_ip} -> Destination IP: {dst_ip}\n")

        # Print the packet information to the console
        print(f"Source IP: {src_ip} -> Destination IP: {dst_ip}")

print("Packet sniffing has started. Press 'Stop' in the Jupyter toolbar to stop.")
conf.L3socket  # Set the socket to Layer 3
sniff(prn=packet_handler, count=10)  # Capture 10 packets
